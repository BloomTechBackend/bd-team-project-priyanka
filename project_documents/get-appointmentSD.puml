@startuml
title Get Appointments By UserId

actor Client
participant "API Gateway" as APIGateway
participant Lambda
participant GetAppointmentActivity
participant UserDao
participant AppointmentDao
participant DoctorAppointmentServiceUtils
participant ModelConverter
database DynamoDB

Client -> APIGateway : GET / appoinments/userid
activate Client
APIGateway -> Lambda
activate Lambda
activate GetAppointmentActivity
activate AppointmentDao
activate UserDao
Lambda -> GetAppointmentActivity :  handleRequest(GetAppointmentRequest, Context)
GetAppointmentActivity -> UserDao : getUser(userId)
UserDao -> DynamoDB : load user by ID
alt if user ID does not exist
    UserDao <-- DynamoDB : null
    Lambda <-- UserDao : throw UserNotFoundException
    APIGateway <-- Lambda
    Client <-- APIGateway : 404 Response
else otherwise, continue
end
GetAppointmentActivity -> AppointmentDao : getAppointments(userId)
AppointmentDao -> DynamoDB : load appoinments by userId
AppointmentDao <- DynamoDB : Appointment
GetAppointmentActivity <- AppointmentDao : Appointment
Lambda <- GetAppointmentActivity : Appointment
APIGateway <- Lambda


@enduml